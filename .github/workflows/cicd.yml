name: CICD Pipeline

# Everytime we push to the main branch it will trigger.
on:
  push:
    branches: [ "main" ]
jobs:

  compile:
     #runs-on: self-hosted
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Compile with Maven
      run: mvn compile

  Security-checks:
     #runs-on: self-hosted
    runs-on: ubuntu-latest
    needs: compile

    steps:
    # Comprehensive Vulnerability Scanner for Containers and Artifacts, Suitable for CI.
    - uses: actions/checkout@v4
    - name: Trivy installation
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: Trivy fs scan
      run: trivy fs --format table -o fs-report.json . 
     
  # CHECK SENSITIVE DATA THAT IS HARDCODED IN SOURCE CODE
  # - name: Gitleaks Installation
  #    run: |
  #     curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
  #     chmod +x gitleaks
  #      sudo mv gitleaks /usr/local/bin
  #   run: sudo apt-get install gitleaks -y
  # - name: Gitleaks code scan
  #   run: gitleaks detect source . -r gitleaks-report.json -f json

  unit-tests:
    #runs-on: self-hosted
    runs-on: ubuntu-latest
    needs: Security-checks

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Case
      run: mvn test

  maven-build:
    #runs-on: self-hosted
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Project
      run: mvn package


  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: maven-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: okxabisohila/demo-app:latest


#    - name: Upload JAR artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: app-jar
#        path: target/*.jar
  
# checks for code smells, vulnarabilities and security inspection
#  sonar-analysis:
#    #runs-on: self-hosted
#    runs-on: ubuntu-latest
#    needs: build-project-and-upload-artifact
#    steps:
#    - uses: actions/checkout@v4
#      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
#        fetch-depth: 0
#    - name: SonarQube Scan
#      uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        
#   - name: SonarQube Quality Gate check
#      id: sonarqube-quality-gate-check
#      uses: sonarsource/sonarqube-quality-gate-action@master
#      with:
#         pollingTimeoutSec: 600
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

#  build-docker-image-and-push:
#    #runs-on: self-hosted
#    runs-on: ubuntu-latest
#    needs: build-project-and-upload-artifact #sonar-analysis
#    steps:
#    - uses: actions/checkout@v4
#    - name: Download JAR artifact
#      uses: actions/download-artifact@v4
#      with:
#        name: app-jar
#        path: target/*.jar

#    - name: Login to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        username: ${{ vars.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - name: Set up QEMU
#      uses: docker/setup-qemu-action@v3
#      
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v3
      
#    - name: Build and push
#      uses: docker/build-push-action@v6
#      with:
#        push: true
#        tags: okxabisohila/demo-app:latest
#       file: ./Dockerfile

 # deploy_to_kubernetes:
 #   runs-on: self-hosted
 #   needs: build-docker-image-and-push
 #   steps:
 #   - name: Checkout Code
 #     uses: actions/checkout@v4
 #   - name: Install AWS CLI
 #     run: |
 #       curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
 #       unzip awscliv2.zip
 #       sudo ./aws/install
 #   - name: Configure AWS credentials
 #     uses: aws-actions/configure-aws-credentials@v2
 #     with:
 #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
 #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 #       aws-region: ap-south-1
 #   - name: Set up kubectl
 #     uses: azure/setup-kubectl@v3
 #     with:
 #       version: latest
 #   - name: Configure kubeconfig
 #     run: |
 #       mkdir -p $HOME/.kube
 #       echo "${{ secrets.EKS_KUBECONFIG }}" > $HOME/.kube/config
 #   - name: Deploy to EKS
 #     run: |
 #       kubectl apply -f ds.yml






    
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
